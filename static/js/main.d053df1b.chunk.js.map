{"version":3,"sources":["store.js","components/searchField/SearchField.js","components/wetaherCard/WeatherCard.js","components/dashboard/Dashboard.js","App.js","index.js"],"names":["initialState","data","store","createStore","state","action","type","payload","filter","item","id","SearchField","React","useState","cityName","setCityName","dispatch","useDispatch","className","value","onChange","e","currentTarget","test","onClick","axios","post","then","res","weatherData","city","temperature","Math","round","main","temp","icon","weather","WetaherCard","deleteBtn","setDeleteBtn","onMouseOver","onMouseOut","style","display","deleteWeatherCard","src","alt","Dashboard","useSelector","length","map","card","index","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAEMA,EAAe,CACjBC,KAAM,IAgBKC,EAFDC,aAXE,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC9C,OAAQA,EAAOC,MACX,IAAK,cACD,OAAO,2BAAKF,GAAZ,IAAmBH,KAAK,GAAD,mBAAMG,EAAMH,MAAZ,CAAkBI,EAAOE,YACpD,IAAK,iBACD,OAAO,2BAAKH,GAAZ,IAAmBH,KAAMG,EAAMH,KAAKO,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOL,EAAOE,aAC1E,QACI,OAAOH,M,gCCkCJO,EApCK,WAAO,IAAD,EAEYC,IAAMC,SAAS,IAF3B,mBAEdC,EAFc,KAEJC,EAFI,KAGhBC,EAAWC,cAwBjB,OACI,yBAAKC,UAAU,iBACX,2BAAOZ,KAAK,OAAOa,MAAOL,EAAUM,SAxBvB,SAAAC,GACjB,IAAIF,EAAQE,EAAEC,cAAcH,MACX,4BACJI,KAAKJ,IAGlBJ,EAAYI,MAmBR,4BAAQK,QAhBK,WACjBC,IAAMC,KAAN,2DAA+DZ,EAA/D,kBArBG,qCAsBEa,MAAK,SAAAC,GACF,IAAIC,EAAc,CACdnB,GAAIkB,EAAI3B,KAAKS,GACboB,KAAMhB,EACNiB,YAAaC,KAAKC,MAAML,EAAI3B,KAAKiC,KAAKC,KAAO,KAC7CC,KAAK,qCAAD,OAAuCR,EAAI3B,KAAKoC,QAAQ,GAAjB,KAAvC,YAERrB,EA1BL,CAAEV,KAAM,cAAeC,QA0BMsB,SAO5B,OACA,4BAAQL,QAAS,kBAAMT,EAAY,MAAnC,WCZGuB,G,MAtBK,SAAC,GAAc,IAAZrC,EAAW,EAAXA,KAAW,EAEIW,IAAMC,SAAS,QAFnB,mBAEvB0B,EAFuB,KAEZC,EAFY,KAGxBxB,EAAWC,cAEjB,OACI,yBAAKwB,YAAa,kBAAMD,EAAa,OACjCE,WAAY,kBAAMF,EAAa,SAC/BtB,UAAU,WAEV,4BAAQyB,MAAO,CAAEC,QAASL,GACtBrB,UAAU,YACVM,QAAS,kBAAMR,EAhBL,SAACf,GACvB,MAAO,CAAEK,KAAM,iBAAkBC,QAASN,GAeN4C,CAAkB5C,EAAKS,OAFnD,UAKA,wBAAIQ,UAAU,QAAQjB,EAAK6B,MAC3B,uBAAGZ,UAAU,eAAejB,EAAK8B,YAAjC,cACA,yBAAKb,UAAU,OAAO4B,IAAK7C,EAAKmC,KAAMW,IAAK9C,EAAKmC,UCP7CY,G,MAbG,WAEd,IAAMnB,EAAcoB,aAAY,SAAA7C,GAAK,OAAIA,EAAMH,QAC/C,OACI,yBAAKiB,UAAU,aACTW,EAAYqB,OAEZrB,EAAYsB,KAAI,SAACC,EAAMC,GAAP,OAAiB,kBAAC,EAAD,CAAaC,IAAKD,EAAOpD,KAAMmD,OADlE,uBAAGlC,UAAU,QAAb,yBCOGqC,MAXf,WACE,OACE,kBAAC,IAAD,CAAUrD,MAAOA,GACf,yBAAKgB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,SCPRsC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d053df1b.chunk.js","sourcesContent":["import { createStore } from 'redux';\r\n\r\nconst initialState = {\r\n    data: [],\r\n};\r\n\r\nconst weather = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_WEATHER':\r\n            return { ...state, data: [...state.data, action.payload] };\r\n        case 'DELETE_WEATHER':\r\n            return { ...state, data: state.data.filter(item => item.id !== action.payload) };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst store = createStore(weather);\r\n\r\nexport default store;","import React from 'react';\r\nimport './style.sass';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst id = '225075b520e334f9e85c982e7e61933b';\r\n\r\nconst addWeatherCard = (data) => {\r\n    return { type: 'ADD_WEATHER', payload: data}\r\n};\r\n\r\nconst SearchField = () => {\r\n\r\n    const [ cityName, setCityName ] = React.useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = e => {\r\n        let value = e.currentTarget.value;\r\n        const template = /[А-я',':'.!?; ]/;\r\n        if (template.test(value)) {\r\n            return;\r\n        };\r\n        setCityName(value);\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        axios.post(`http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${id}`)\r\n            .then(res => {\r\n                let weatherData = {\r\n                    id: res.data.id,\r\n                    city: cityName,\r\n                    temperature: Math.round(res.data.main.temp - 273),\r\n                    icon: `https://openweathermap.org/img/wn/${res.data.weather[0]['icon']}@2x.png`,\r\n                };\r\n                dispatch(addWeatherCard(weatherData));\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className='searchWeather'>\r\n            <input type=\"text\" value={cityName} onChange={handleChange}></input>\r\n            <button onClick={handleSubmit}>add</button>\r\n            <button onClick={() => setCityName('')}>Clear</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SearchField;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './style.sass';\r\n\r\nconst deleteWeatherCard = (data) => {\r\n    return { type: 'DELETE_WEATHER', payload: data };\r\n};\r\n\r\nconst WetaherCard = ({ data }) => {\r\n\r\n    const [deleteBtn, setDeleteBtn] = React.useState('none');\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div onMouseOver={() => setDeleteBtn(null)}\r\n            onMouseOut={() => setDeleteBtn('none')}\r\n            className='wrapper'\r\n        >\r\n            <button style={{ display: deleteBtn }}\r\n                className='deleteBtn'\r\n                onClick={() => dispatch(deleteWeatherCard(data.id))}\r\n            >\r\n                Delete</button>\r\n            <h3 className='city'>{data.city}</h3>\r\n            <p className='temperature'>{data.temperature}&deg;С</p>\r\n            <img className='icon' src={data.icon} alt={data.icon} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default WetaherCard\r\n\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport WetaherCard from '../wetaherCard/WeatherCard';\r\nimport './style.sass';\r\n\r\nconst Dashboard = () => {\r\n\r\n    const weatherData = useSelector(state => state.data);\r\n    return (\r\n        <div className='container'>\r\n            {!weatherData.length ? \r\n            <p className='info'>Dashboard is empty</p> \r\n            : weatherData.map((card, index) => <WetaherCard key={index} data={card}/>)}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Dashboard","import React from 'react';\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport SearchField from './components/searchField/SearchField';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className='App'>\r\n        <SearchField />\r\n        <Dashboard />\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}